From 3c7fa14bae26e53b1a0dfcace57551dc86098002 Mon Sep 17 00:00:00 2001
From: Janmm14 <computerjanimaus@yahoo.de>
Date: Fri, 9 Oct 2015 16:59:23 +0200
Subject: [PATCH] Add tab-complete throttling

Adapted from pull request https://github.com/SpigotMC/BungeeCord/pull/1522

To enable tab complete throttling you need to set the 'minotopia.tab_complete_throttle' value in the configuration. As the connection throttle, this is measured in milliseconds and a negative value equals no tab throttling.
---
 api/src/main/java/net/md_5/bungee/api/ProxyConfig.java         |  5 +++++
 proxy/src/main/java/net/md_5/bungee/conf/Configuration.java    |  2 ++
 .../main/java/net/md_5/bungee/connection/UpstreamBridge.java   | 10 ++++++++++
 3 files changed, 17 insertions(+)

diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index b638a14..914aa9d 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -57,6 +57,11 @@ public interface ProxyConfig
     int getThrottle();
 
     /**
+     * The tab complete throttle delay.
+     */
+    int getTabCompleteThrottle();
+
+    /**
      * Whether the proxy will parse IPs with spigot or not
      */
     @Deprecated
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
index 97e0003..ba5dd3f 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
@@ -53,6 +53,7 @@ public class Configuration implements ProxyConfig
     private boolean ipForward;
     private Favicon favicon;
     private int compressionThreshold = 256;
+    private int tabCompleteThrottle = -1;
 
     public void load()
     {
@@ -77,6 +78,7 @@ public class Configuration implements ProxyConfig
         onlineMode = adapter.getBoolean( "online_mode", onlineMode );
         playerLimit = adapter.getInt( "player_limit", playerLimit );
         throttle = adapter.getInt( "connection_throttle", throttle );
+        tabCompleteThrottle = adapter.getInt( "tab_complete_throttle", tabCompleteThrottle );
         ipForward = adapter.getBoolean( "ip_forward", ipForward );
         compressionThreshold = adapter.getInt( "network_compression_threshold", compressionThreshold );
 
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index 13637df..e82f2d2 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -28,6 +28,7 @@ import net.md_5.bungee.protocol.packet.TabCompleteResponse;
 public class UpstreamBridge extends PacketHandler
 {
 
+    private long lastTabComplete = -1;
     private final ProxyServer bungee;
     private final UserConnection con;
 
@@ -124,6 +125,15 @@ public class UpstreamBridge extends PacketHandler
     @Override
     public void handle(TabCompleteRequest tabComplete) throws Exception
     {
+        if ( bungee.getConfig().getTabCompleteThrottle() > 0 )
+        {
+            long now = System.currentTimeMillis();
+            if ( lastTabComplete != -1 && ( now - lastTabComplete ) <= bungee.getConfig().getTabCompleteThrottle() )
+            {
+                throw CancelSendSignal.INSTANCE;
+            }
+            lastTabComplete = now;
+        }
         List<String> suggestions = new ArrayList<>();
 
         if ( tabComplete.getCursor().startsWith( "/" ) )
-- 
1.9.5.msysgit.0

