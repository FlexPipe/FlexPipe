From 31e6bc73cfdaf9b53b9cde3f9fc51544e9b3ce0a Mon Sep 17 00:00:00 2001
From: Janmm14 <computerjanimaus@yahoo.de>
Date: Wed, 7 Oct 2015 21:53:26 +0200
Subject: [PATCH 1/6] Re-Implement throttle

This connection throttle takes care of pings by kicking in only if its clearly a join try.
Additionally it waits to be able to send a kick message to the client.
This implementation sends a nice german kick message containing a little highered number of the actual seconds he needs to wait. So this is not intended to be a real fix.

Whether throttle is logged can be specified by the log_throttled config.yml option, defaults to false.
---
 api/src/main/java/net/md_5/bungee/api/ProxyConfig.java   |  5 +++++
 .../main/java/net/md_5/bungee/conf/Configuration.java    |  5 +++++
 .../java/net/md_5/bungee/connection/InitialHandler.java  | 16 +++++++++++++++-
 .../main/java/net/md_5/bungee/netty/PipelineUtils.java   |  6 ------
 4 files changed, 25 insertions(+), 7 deletions(-)

diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index edd82c1..25590e3 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -46,6 +46,11 @@ public interface ProxyConfig
     boolean isLogCommands();
 
     /**
+     * Whether we log throttled join attempts
+     */
+    boolean isLogThrottled();
+
+    /**
      * Returns the player max.
      */
     int getPlayerLimit();
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
index 7d52931..9cd6ab9 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
@@ -51,6 +51,10 @@ public class Configuration implements ProxyConfig
      * Whether we log proxy commands to the proxy log
      */
     private boolean logCommands;
+    /**
+     * Whether we log throttled join attempts
+     */
+    private boolean logThrottled;
     private int playerLimit = -1;
     private Collection<String> disabledCommands;
     private int throttle = 4000;
@@ -80,6 +84,7 @@ public class Configuration implements ProxyConfig
         uuid = adapter.getString( "stats", uuid );
         onlineMode = adapter.getBoolean( "online_mode", onlineMode );
         logCommands = adapter.getBoolean( "log_commands", logCommands );
+        logThrottled = adapter.getBoolean( "log_throttled", logThrottled );
         playerLimit = adapter.getInt( "player_limit", playerLimit );
         throttle = adapter.getInt( "connection_throttle", throttle );
         ipForward = adapter.getBoolean( "ip_forward", ipForward );
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 8dffca3..d747d9a 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -63,6 +63,9 @@ import net.md_5.bungee.util.BoundedArrayList;
 @RequiredArgsConstructor
 public class InitialHandler extends PacketHandler implements PendingConnection
 {
+    private static final BaseComponent[] THROTTLE_REASON = new net.md_5.bungee.api.chat.ComponentBuilder( "Du hast dich zu schnell wiederverbunden, warte bitte mindestens " + ( ( BungeeCord.getInstance().getConfig().getThrottle() / 1000 ) + 2 ) + " Sekunden." )
+            .color( ChatColor.RED )
+            .create();
 
     private final ProxyServer bungee;
     private ChannelWrapper ch;
@@ -212,7 +215,6 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                     @Override
                     public void done(ProxyPingEvent pingResult, Throwable error)
                     {
-                        BungeeCord.getInstance().getConnectionThrottle().unthrottle( getAddress().getAddress() );
                         Gson gson = handshake.getProtocolVersion() == ProtocolConstants.MINECRAFT_1_7_2 ? BungeeCord.getInstance().gsonLegacy : BungeeCord.getInstance().gson;
                         unsafe.sendPacket( new StatusResponse( gson.toJson( pingResult.getResponse() ) ) );
                     }
@@ -296,6 +298,18 @@ public class InitialHandler extends PacketHandler implements PendingConnection
     @Override
     public void handle(LoginRequest loginRequest) throws Exception
     {
+        // should only be used if its definitely NO ping / status request
+        // as otherwise pings after status requests are blocked
+        // throttle should not be used in handle(Handshake) as its impossible to give the user a proper message at that state
+        if (BungeeCord.getInstance().getConnectionThrottle().throttle( ( (InetSocketAddress) ch.getHandle().remoteAddress() ).getAddress() ) )
+        {
+            if ( BungeeCord.getInstance().getConfig().isLogThrottled() )
+            {
+                bungee.getLogger().log( Level.INFO, "{0} throttled", this );
+            }
+            disconnect(THROTTLE_REASON);
+            return;
+        }
         Preconditions.checkState( thisState == State.USERNAME, "Not expecting USERNAME" );
         this.loginRequest = loginRequest;
 
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index a5feb1e..8f09e9d 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -49,12 +49,6 @@ public class PipelineUtils
         @Override
         protected void initChannel(Channel ch) throws Exception
         {
-            if ( BungeeCord.getInstance().getConnectionThrottle().throttle( ( (InetSocketAddress) ch.remoteAddress() ).getAddress() ) )
-            {
-                // TODO: Better throttle - we can't throttle this way if we want to maintain 1.7 compat!
-                // ch.close();
-                // return;
-            }
 
             BASE.initChannel( ch );
             ch.pipeline().addBefore( FRAME_DECODER, LEGACY_DECODER, new LegacyDecoder() );
-- 
1.9.5.msysgit.0

