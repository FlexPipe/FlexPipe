From 59a3ff7c2394d52414796e054d07a363c0bbfc4a Mon Sep 17 00:00:00 2001
From: Minecrell <dev@minecrell.net>
Date: Mon, 28 Mar 2016 23:47:10 +0200
Subject: Edit messages without modifying the JAR file more easily.

Adds a new messages.properties file to customize them.
Instead of just looking for the properties file, this patch creates it and allows reloading the messages on a bungee reload.

This also reverts "#901: Better custom messages support", commit f265f7c5944d195ffa070016a63d893e9a2d8cb1.

Signed-off-by: Janmm14 <computerjanimaus@yahoo.de>
---
 .../main/java/net/md_5/bungee/api/ProxyServer.java |  5 ++
 .../src/main/java/net/md_5/bungee/BungeeCord.java  | 81 +++++++++++++++++-----
 .../net/md_5/bungee/command/CommandReload.java     |  1 +
 3 files changed, 70 insertions(+), 17 deletions(-)

diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index 11c5b68..28ca52f 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -129,6 +129,11 @@ public abstract class ProxyServer
     public abstract void setConfigurationAdapter(ConfigurationAdapter adapter);
 
     /**
+     * Reload the proxy server messages from the configuration file.
+     */
+    public abstract void reloadMessages();
+
+    /**
      * Get the currently in use reconnect handler.
      *
      * @return the in use reconnect handler
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 2f9a8c7..8dec98f 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -8,6 +8,12 @@ import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import com.google.gson.GsonBuilder;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.util.Properties;
+import java.util.PropertyResourceBundle;
 import net.md_5.bungee.api.Favicon;
 import net.md_5.bungee.api.ServerPing;
 import net.md_5.bungee.api.Title;
@@ -33,7 +39,6 @@ import io.netty.channel.EventLoopGroup;
 import io.netty.util.ResourceLeakDetector;
 import net.md_5.bungee.conf.Configuration;
 import java.io.File;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.PrintStream;
 import java.net.InetSocketAddress;
@@ -46,7 +51,6 @@ import java.util.HashSet;
 import java.util.Locale;
 import java.util.Map;
 import java.util.MissingResourceException;
-import java.util.PropertyResourceBundle;
 import java.util.ResourceBundle;
 import java.util.Timer;
 import java.util.TimerTask;
@@ -102,8 +106,7 @@ public class BungeeCord extends ProxyServer
     /**
      * Localization bundle.
      */
-    private ResourceBundle baseBundle;
-    private ResourceBundle customBundle;
+    public ResourceBundle bundle;
     public EventLoopGroup eventLoops;
     /**
      * locations.yml save thread.
@@ -151,7 +154,8 @@ public class BungeeCord extends ProxyServer
     private ConnectionThrottle connectionThrottle;
     private final ModuleManager moduleManager = new ModuleManager();
 
-    
+    private final File messagesFile = new File ( "messages.properties" );
+
     {
         // TODO: Proper fallback when we interface the manager
         getPluginManager().registerCommand( null, new CommandReload() );
@@ -178,18 +182,10 @@ public class BungeeCord extends ProxyServer
 
         try
         {
-            baseBundle = ResourceBundle.getBundle( "messages" );
+            bundle = ResourceBundle.getBundle( "messages" );
         } catch ( MissingResourceException ex )
         {
-            baseBundle = ResourceBundle.getBundle( "messages", Locale.ENGLISH );
-        }
-        File file = new File( "messages.properties" );
-        if ( file.isFile() )
-        {
-            try ( FileReader rd = new FileReader( file ) )
-            {
-                customBundle = new PropertyResourceBundle( rd );
-            }
+            bundle = ResourceBundle.getBundle( "messages", Locale.ENGLISH );
         }
 
         // This is a workaround for quite possibly the weirdest bug I have ever encountered in my life!
@@ -227,6 +223,57 @@ public class BungeeCord extends ProxyServer
                 logger.info( "Using standard Java compressor. To enable zero copy compression, run on 64 bit Linux" );
             }
         }
+
+        reloadMessages();
+    }
+
+    @Override
+    public void reloadMessages()
+    {
+        try // Make sure the translation file is up to date
+        {
+            Properties messages = new Properties();
+
+            if ( messagesFile.exists() )
+            {
+                try ( InputStream is = new FileInputStream( messagesFile ) )
+                {
+                    messages.load( is );
+                }
+            }
+
+            // Check for new entries
+            int newEntries = 0;
+            for ( String key : bundle.keySet() )
+            {
+                if ( !messages.containsKey( key ) )
+                {
+                    messages.put( key, bundle.getObject( key ) );
+                    newEntries++;
+                }
+            }
+
+            if ( newEntries > 0 )
+            {
+                // We need to save the file to add the new entries
+                try ( OutputStream os = new FileOutputStream( messagesFile ) )
+                {
+                    messages.store( os, "FlexPipe messages, last updated for " + getVersion() );
+                }
+            }
+        } catch ( Exception ex )
+        {
+            getLogger().log( Level.SEVERE, "Could not update messages", ex );
+        }
+
+        // Load the messages from the configuration file
+        try ( InputStream is = new FileInputStream( messagesFile ) )
+        {
+            bundle = new PropertyResourceBundle( is );
+        } catch ( Exception ex )
+        {
+            getLogger().log( Level.SEVERE, "Could not reload messages", ex );
+        }
     }
 
     /**
@@ -472,7 +519,7 @@ public class BungeeCord extends ProxyServer
         String translation = "<translation '" + name + "' missing>";
         try
         {
-            translation = MessageFormat.format( customBundle != null && customBundle.containsKey( name ) ? customBundle.getString( name ) : baseBundle.getString( name ), args );
+            translation = MessageFormat.format( bundle.getString( name ), args );
         } catch ( MissingResourceException ex )
         {
         }
@@ -592,7 +639,7 @@ public class BungeeCord extends ProxyServer
     @Override
     public String getGameVersion()
     {
-        return Joiner.on( ", " ).join( ProtocolConstants.SUPPORTED_VERSIONS );
+        return Joiner.on(", ").join(ProtocolConstants.SUPPORTED_VERSIONS);
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
index cbbe03c..771ef5d 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
@@ -18,6 +18,7 @@ public class CommandReload extends Command
     public void execute(CommandSender sender, String[] args)
     {
         BungeeCord.getInstance().config.load();
+        BungeeCord.getInstance().reloadMessages();
         BungeeCord.getInstance().stopListeners();
         BungeeCord.getInstance().startListeners();
         BungeeCord.getInstance().getPluginManager().callEvent( new ProxyReloadEvent( sender ) );
-- 
1.9.5.msysgit.0

